{"version":3,"sources":["components/Home.js","components/Questions.js","components/Test.js","components/Questions2.js","components/Testtwo.js","components/Text.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Hist","useHistory","useState","level","setlevel","className","name","placeholder","onChange","event","target","value","Button","variant","onClick","console","log","localStorage","setItem","push","color","Questions","questionText","answerOptions","answerText","isCorrect","Test","clear","questions","colour","setcolor","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","counter","setCounter","handleAnswerOptionClick","nextQuestion","length","map","k","toLowerCase","useEffect","getItem","setTimeout","to","removeItem","style","answerOption","Testtwo","Text","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb48d5d9.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\n\r\nfunction Home() {\r\n    const Hist=useHistory();\r\n    const [level,setlevel]=useState('none');\r\n    const [level2,setlevel2]=useState('none');\r\n\r\n    const handleChange = () => {\r\n        console.log(level);\r\n        if(level=='low'){\r\n            localStorage.setItem('level','low');\r\n            Hist.push('/text');\r\n        }\r\n        else if(level=='high')\r\n        {\r\n            localStorage.setItem('level','high');\r\n            Hist.push('/text');\r\n\r\n        }\r\n      }\r\n\r\n   \r\n    return (\r\n        <div className='app1'>           \r\n            <div className='card'>\r\n                <p className='title'>Stroop Test </p>\r\n                <label>choose a level:</label>\r\n                <select name=\"level\" placeholder={level} onChange={(event)=>{setlevel(event.target.value)}} className='select'>\r\n                <option value='none'className='select' > None </option>\r\n                <option value='low'className='select' > Easy </option>\r\n                <option value='high'className='select'> Advanced </option>\r\n                </select>\r\n                <div className='but'>\r\n                <Button variant=\"outlined\" onClick={handleChange}  color=\"primary\" >\r\n                         Start\r\n                </Button>\r\n                                       \r\n        </div>   </div>     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export const Questions=[\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: true },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect:  true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect:  true },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect:  true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: true },\r\n            { answerText: 'Green', isCorrect:  false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'YELLOW',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect:  true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: true },\r\n            { answerText: 'Green', isCorrect:  false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'YELLOW',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect:  true },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect:  true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'YELLOW',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect:  true },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect:  true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: true },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n\r\n\r\n]","import React ,{useState,useEffect} from 'react';\r\nimport {Questions} from './Questions';\r\nimport {ReactCountdownClock } from 'react-countdown-clock';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link,useHistory} from 'react-router-dom';\r\n\r\n\r\nfunction Test() {\r\n    localStorage.clear()\r\n    const hist= useHistory();\r\n    const questions =Questions;\r\n    const [colour,setcolor]= useState('yellow')\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n    const [counter,setCounter]=useState(30)\r\n    const [c,setc]=useState(0);\r\n    const findcolor=()=>{\r\n        questions[currentQuestion+1].answerOptions.map((k)=>{\r\n            if(k.isCorrect==true) {\r\n               setcolor(k.answerText.toLowerCase());\r\n                return k.answerText.toLowerCase()\r\n            }\r\n\r\n        })\r\n        }\r\n        \r\n      \r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n       \r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n        \r\n        \r\n\t\tif (nextQuestion < questions.length) {\r\n            findcolor();\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem('home'))\r\n        counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n       \r\n      }, [counter]); \r\n   \r\n\r\n\r\n\r\n    return (\r\n        <div className='app'>\r\n          \r\n            {showScore || !counter ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t<span>You scored {score} out of {questions.length}</span>\t\r\n                    {\r\n                    localStorage.setItem('home',1)}\r\n                    \r\n                    \r\n                   <Link to='/'><br/> <Button variant=\"contained\" color=\"primary\" onClick={()=>{localStorage.removeItem('home')}}>Home</Button></Link>\r\n                    \r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n                 \r\n\t\t\t\t\t<div className='question-section'>\r\n                    \r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n                            <br/>\r\n                            <br/>\r\n                    \r\n                            <span>Timer : {counter}</span>\r\n\t\t\t\t\t\t</div>\r\n                        \r\n\t\t\t\t\t\t<div className='question-text' style={{color:colour}}>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() =>{ handleAnswerOptionClick(answerOption.isCorrect);}} > {answerOption.answerText}\r\n                            </button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div> \r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n          \r\n           \r\n       \r\n    )\r\n}\r\n\r\nexport default Test\r\n","export const Questions=[\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: true },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect:  false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect:  false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect:  false },\r\n            { answerText: 'Blue', isCorrect: true },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect:  true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'YELLOW',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: true },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect:  false },\r\n            { answerText: 'Blue', isCorrect: true },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect:  true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'YELLOW',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: true },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: true },\r\n            { answerText: 'Blue', isCorrect:  false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect:  false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'YELLOW',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: true },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: true },\r\n            { answerText: 'Blue', isCorrect:  false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: true },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect:  false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n\r\n\r\n]","import React ,{useState,useEffect} from 'react';\r\nimport {Questions} from './Questions2';\r\nimport {ReactCountdownClock } from 'react-countdown-clock';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link,useHistory} from 'react-router-dom';\r\n\r\n\r\nfunction Testtwo() {\r\n    localStorage.clear()\r\n    const hist= useHistory();\r\n    const questions =Questions;\r\n    const [colour,setcolor]= useState('red')\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n    const [counter,setCounter]=useState(30)\r\n    const [c,setc]=useState(0);\r\n    const findcolor=()=>{\r\n        questions[currentQuestion+1].answerOptions.map((k)=>{\r\n            if(k.isCorrect==true) {\r\n               setcolor(k.answerText.toLowerCase());\r\n                return k.answerText.toLowerCase()\r\n            }\r\n\r\n        })\r\n        }\r\n        \r\n      \r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n       \r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n        \r\n        \r\n\t\tif (nextQuestion < questions.length) {\r\n            findcolor();\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem('home'))\r\n        counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n       \r\n      }, [counter]); \r\n   \r\n\r\n\r\n\r\n    return (\r\n        <div className='app'>\r\n          \r\n            {showScore || !counter ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t<span>You scored {score} out of {questions.length}</span>\t\r\n                    {\r\n                    localStorage.setItem('home',1)}\r\n                    \r\n                    \r\n                   <Link to='/'><br/> <Button variant=\"contained\" color=\"primary\" onClick={()=>{localStorage.removeItem('home')}}>Home</Button></Link>\r\n                    \r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n                 \r\n\t\t\t\t\t<div className='question-section'>\r\n                    \r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n                            <br/>\r\n                            <br/>\r\n                    \r\n                            <span>Timer : {counter}</span>\r\n\t\t\t\t\t\t</div>\r\n                        \r\n\t\t\t\t\t\t<div className='question-text' style={{color:colour}}>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() =>{ handleAnswerOptionClick(answerOption.isCorrect);}} > {answerOption.answerText}\r\n                            </button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div> \r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n          \r\n           \r\n       \r\n    )\r\n}\r\n\r\nexport default Testtwo\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link,useHistory} from 'react-router-dom';\r\n\r\nfunction Text() {\r\n    const Hist=useHistory();\r\n    const level = localStorage.getItem('level');\r\n    const handleChange = () => {\r\n        if(level=='low'){\r\n            Hist.push('/test2');\r\n        }\r\n        else if(level=='high')\r\n        {\r\n            Hist.push('/test1');\r\n        }\r\n      }\r\n\r\n\r\n    return (\r\n        <div className='app3'>\r\n           <p><h3>Stroop Effect:</h3>\r\n                The Stroop effect is one of the best known phenomena in cognitive psychology. The Stroop effect occurs when people do the Stroop task, which is explained and demonstrated in detail in this lesson. The Stroop effect is related to selective attention, which is the ability to respond to certain environmental stimuli while ignoring others.\r\n            </p>                 \r\n            <p>\r\n                <h3>Stroop Test Task:</h3>\r\n            In this task There will be two test levels those are Easy and Advance, In Easy level test people simply look at colour words, such as blue, red, or green. In Advance level takes longer time and is more prone to errors where the colour of the ink does not match the name of the colour. which makes people under stress and helps to check people attention.\r\n            </p>\r\n            <p>\r\n            <h3>Instructions:</h3>\r\nThere will be 16 words in each level you should choose colour of the word not what the word actually it is,After choosing the colour of word for next word will be presented which has to be chosen, You will have 30 seconds to complete each level,Your score and time taken to complete tells your attention.\r\n            </p>\r\n\r\n            <div className='but'>\r\n                <Button variant=\"outlined\" onClick={handleChange} className='textbutton' color=\"primary\" >\r\n                         Start\r\n                </Button>\r\n                                       \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text\r\n","import './App.css';\nimport {BrowserRouter as Router , Route, useHistory ,Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Test from './components/Test';\nimport Testtwo from './components/Testtwo';\nimport Text from './components/Text';\nfunction App() {\n  return (\n        <Router>\n        <Route exact path=\"/\" ><Home/></Route>\n        <Route exact path=\"/test1\" ><Test/></Route>\n        <Route exact path=\"/test2\" ><Testtwo/></Route>\n        <Route exact path=\"/text\" ><Text/></Route>\n        \n        </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}