{"version":3,"sources":["components/Home.js","components/Questions.js","components/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","Button","variant","color","Questions","questionText","answerOptions","answerText","isCorrect","Test","localStorage","clear","useHistory","questions","useState","colour","setcolor","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","counter","setCounter","handleAnswerOptionClick","nextQuestion","length","map","k","toLowerCase","useEffect","getItem","setTimeout","setItem","onClick","removeItem","style","answerOption","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAqBeA,MAlBf,WACI,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAU,OAAf,UACI,mBAAGA,UAAU,QAAb,yBACA,qBAAKA,UAAU,MAAf,SACX,eAAC,IAAD,CAAMC,GAAG,QAAT,cAAkB,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAiBC,MAAM,UAAvC,8B,QCTVC,EAAU,CACnB,CACIC,aAAc,MACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,OACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAY,KAG3C,CACIH,aAAc,QACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAY,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,OACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAY,GACjC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,QACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAY,KAG3C,CACIH,aAAc,SACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,OACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAY,GACjC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,QACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAY,KAG3C,CACIH,aAAc,SACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,MACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAY,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,QACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAY,GACjC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,SACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,MACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAY,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,OACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAY,KAG3C,CACIH,aAAc,QACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,MACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,M,MC5C/BC,MA3Ff,WACIC,aAAaC,QACDC,cAAZ,IACMC,EAAWT,EAHL,EAIaU,mBAAS,UAJtB,mBAILC,EAJK,KAIEC,EAJF,OAK+BF,mBAAS,GALxC,mBAKRG,EALQ,KAKSC,EALT,OAMmBJ,oBAAS,GAN5B,mBAMRK,EANQ,KAMGC,EANH,OAOWN,mBAAS,GAPpB,mBAORO,EAPQ,KAODC,EAPC,OAQeR,mBAAS,IARxB,mBAQLS,EARK,KAQGC,EARH,OASGV,mBAAS,GATZ,mBAsBTW,GAtBS,UAsBiB,SAACjB,GAE5BA,GACHc,EAASD,EAAQ,GAElB,IAAMK,EAAeT,EAAkB,EAGnCS,EAAeb,EAAUc,QAnBvBd,EAAUI,EAAgB,GAAGX,cAAcsB,KAAI,SAACC,GAC5C,GAAgB,GAAbA,EAAErB,UAED,OADDQ,EAASa,EAAEtB,WAAWuB,eACdD,EAAEtB,WAAWuB,iBAkBjCZ,EAAmBQ,IAEnBN,GAAa,KAaZ,OATAW,qBAAU,WACFrB,aAAasB,QAAQ,SACzBT,EAAU,GAAKU,YAAW,kBAAMT,EAAWD,EAAU,KAAI,OAExD,CAACA,IAMF,qBAAKxB,UAAU,MAAf,SAEKoB,IAAcI,EACvB,sBAAKxB,UAAU,gBAAf,UACA,+CAAkBsB,EAAlB,WAAiCR,EAAUc,UAE3BjB,aAAawB,QAAQ,OAAO,GAG7B,eAAC,IAAD,CAAMlC,GAAG,IAAT,UAAa,uBAAb,IAAmB,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUgC,QAAS,WAAKzB,aAAa0B,WAAW,SAAlF,wBAIlC,qCAEC,sBAAKrC,UAAU,mBAAf,UAEC,sBAAKA,UAAU,iBAAf,UACC,6CAAgBkB,EAAkB,KADnC,IAC8CJ,EAAUc,OAClC,uBACA,uBAEA,4CAAeJ,QAGrC,qBAAKxB,UAAU,gBAAgBsC,MAAO,CAAClC,MAAMY,GAA7C,SAAuDF,EAAUI,GAAiBZ,kBAEnF,qBAAKN,UAAU,iBAAf,SAEEc,EAAUI,GAAiBX,cAAcsB,KAAI,SAACU,GAAD,OAC7C,yBAAQH,QAAS,WAAOV,EAAwBa,EAAa9B,YAA7D,cAA8E8B,EAAa/B,yBCpEnFgC,MAXf,WACE,OACM,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SAAuB,cAAC,EAAD,MACvB,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SAA2B,cAAC,EAAD,UCEpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1ac0ab95.chunk.js","sourcesContent":["import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\nfunction Home() {\r\n    return (\r\n        <div className='app1'>           \r\n            <div className='card'>\r\n                <p className='title'>Stroop Test</p>\r\n                <div className='but'>\r\n     <Link to='/test'> <Button variant=\"outlined\"       color=\"primary\" >\r\n       Start\r\n      </Button></Link>\r\n               \r\n                                 \r\n        </div>\r\n        </div>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export const Questions=[\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: true },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect:  true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect:  true },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect:  true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: true },\r\n            { answerText: 'Green', isCorrect:  false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'YELLOW',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect:  true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: true },\r\n            { answerText: 'Green', isCorrect:  false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'YELLOW',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect:  true },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect:  true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'YELLOW',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect:  true },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'BLUE',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect:  true },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'GREEN',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: false },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: true },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'RED',\r\n        answerOptions: [\r\n            { answerText: 'Red', isCorrect: true },\r\n            { answerText: 'Blue', isCorrect: false },\r\n            { answerText: 'Yellow', isCorrect: false },\r\n            { answerText: 'Green', isCorrect: false },\r\n        ],\r\n    },\r\n\r\n\r\n]","import React ,{useState,useEffect} from 'react';\r\nimport {Questions} from './Questions';\r\nimport {ReactCountdownClock } from 'react-countdown-clock';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link,useHistory} from 'react-router-dom';\r\n\r\n\r\nfunction Test() {\r\n    localStorage.clear()\r\n    const hist= useHistory();\r\n    const questions =Questions;\r\n    const [colour,setcolor]= useState('yellow')\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n    const [counter,setCounter]=useState(30)\r\n    const [c,setc]=useState(0);\r\n    const findcolor=()=>{\r\n        questions[currentQuestion+1].answerOptions.map((k)=>{\r\n            if(k.isCorrect==true) {\r\n               setcolor(k.answerText.toLowerCase());\r\n                return k.answerText.toLowerCase()\r\n            }\r\n\r\n        })\r\n        }\r\n        \r\n      \r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n       \r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n        \r\n        \r\n\t\tif (nextQuestion < questions.length) {\r\n            findcolor();\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem('home'))\r\n        counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n       \r\n      }, [counter]); \r\n   \r\n\r\n\r\n\r\n    return (\r\n        <div className='app'>\r\n          \r\n            {showScore || !counter ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t<span>You scored {score} out of {questions.length}</span>\t\r\n                    {\r\n                    localStorage.setItem('home',1)}\r\n                    \r\n                    \r\n                   <Link to='/'><br/> <Button variant=\"contained\" color=\"primary\" onClick={()=>{localStorage.removeItem('home')}}>Home</Button></Link>\r\n                    \r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n                 \r\n\t\t\t\t\t<div className='question-section'>\r\n                    \r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n                            <br/>\r\n                            <br/>\r\n                    \r\n                            <span>Timer : {counter}</span>\r\n\t\t\t\t\t\t</div>\r\n                        \r\n\t\t\t\t\t\t<div className='question-text' style={{color:colour}}>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() =>{ handleAnswerOptionClick(answerOption.isCorrect);}} > {answerOption.answerText}\r\n                            </button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div> \r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n          \r\n           \r\n       \r\n    )\r\n}\r\n\r\nexport default Test\r\n","import './App.css';\nimport {BrowserRouter as Router , Route, useHistory ,Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Test from './components/Test'\n\n\nfunction App() {\n  return (\n        <Router>\n        <Route exact path=\"/\" ><Home/></Route>\n        <Route exact path=\"/test\" ><Test/></Route>\n        \n        </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}